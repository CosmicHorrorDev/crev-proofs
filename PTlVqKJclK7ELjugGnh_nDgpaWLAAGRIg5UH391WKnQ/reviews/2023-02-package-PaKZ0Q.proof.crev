----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: 2023-02-10T17:31:17.990816304-07:00
from:
  id-type: crev
  id: PTlVqKJclK7ELjugGnh_nDgpaWLAAGRIg5UH391WKnQ
  url: https://github.com/LovecraftianHorror/crev-proofs
package:
  source: https://crates.io
  name: bloomfilter
  version: 1.0.9
  revision: 02c9e51743f70d7400d7cd3a810875781f3c73d4
  digest: DoO_2ANdNjy15pYruY3tQLkbbq7iSeOUT8ltgzBdsv8
review:
  thoroughness: high
  understanding: medium
  rating: positive
alternatives:
- source: https://crates.io
  name: bloom
comment: |-
  A simple and straightforward bloomfilter implementation
  
  There could be better documentation (many places can panic without documenting
  as such), better tests, more focus on avoiding overflows, and being less panic
  happy on errors, but aside from that everything seems good
  
  There do seem to be issues with The ability to overflow the bitmap bit size in
  `Bloom::new_with_seed`, possible issues with a lot of casting between `u64`
  and `usize`, and finally issues with the possibility to serialize and
  deserialize the bloomfilter on computers that have different `usize` sizes.
  The worst that I think could happen would be changing which values are
  considered to be in the filter, but considering the common use would use a
  random seed for the hash which should make that pretty hard to exploit
----- SIGN CREV PROOF -----
-TWMnOscLWTN2N3z6exAIjD0VaHDoRryNnu1fzvDgfUQSmsqU_WNeUn68iyCmk4R9Rc2RpxrHIZfcsFloT_ACg
----- END CREV PROOF -----

